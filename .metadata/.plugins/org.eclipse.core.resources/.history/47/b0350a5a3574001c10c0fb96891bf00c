package kr.co.util;

import java.io.File;
import java.io.IOException;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.Iterator;
import java.util.List;
import java.util.Map;
import java.util.UUID;

import org.springframework.stereotype.Component;
import org.springframework.web.multipart.MultipartFile;
import org.springframework.web.multipart.MultipartHttpServletRequest;

import kr.co.vo.BoardVO;

//@Component: 어디서든 하나의 클래스로 여겨지고 호출될 수 있다.
@Component("fileUtils")
public class FileUtils {
	//경로를 변경하세요
	private static final String filePath = "D:\\ssj\\spring2\\uploadedfile";
	
	//파일 추가
	//Map<파일경로, 파일속성들>
	public List<Map<String, Object>> parseInsertFileInfo(BoardVO boardVO, MultipartHttpServletRequest mpRequest) {
		Iterator<String> iterator = mpRequest.getFileNames();
		MultipartFile multipartFile = null;	//원본파일자체
		String originalFileName = null;	//파일이름만
		String originalFileExtension = null;	//확장자만
		String storedFileName = null;	//경로를 포함한 파일명
		
		List<Map<String, Object>> list = new ArrayList<Map<String, Object>>();
		Map<String, Object> listMap = null;
		
		int bno = boardVO.getBno();
		File file = new File(filePath);
		if(file.exists() == false) {	//mkdir: 하나의 폴더만 만들기, mkdirs: 여러폴더 만들기
			file.mkdirs();	
		}
		while(iterator.hasNext()) {
			multipartFile = mpRequest.getFile(iterator.next());
			if(multipartFile.isEmpty() == false) {
				originalFileName = multipartFile.getOriginalFilename();
				originalFileExtension = originalFileName.substring(originalFileName.lastIndexOf("."));
				storedFileName = getRandomString() + originalFileName;
				file = new File(filePath + storedFileName);
				try {
					multipartFile.transferTo(file);
				} catch (IllegalStateException e) {
					e.printStackTrace();
				} catch (IOException e) {
					e.printStackTrace();
				}
				listMap = new HashMap<String, Object>();
				listMap.put("BNO", bno);
				listMap.put("ORG_FILE_NAME", originalFileName);
				listMap.put("STORED_FILE_NAME", storedFileName);
				listMap.put("FILE_SIZE", multipartFile.getSize());
				list.add(listMap);
			}
		}
		return list;
	}
	
	//파일 갱신
	public List<Map<String, Object>> parseUpdateFileInfo(BoardVO boardVO, MultipartHttpServletRequest mpRequest) {
		
	}
	
	public static String getRandomString() {
		return UUID.randomUUID().toString().replaceAll("-", "");
	}
}
