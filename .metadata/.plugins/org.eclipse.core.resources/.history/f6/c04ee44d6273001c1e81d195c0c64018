package kr.co.vo;

import org.springframework.web.util.UriComponents;
import org.springframework.web.util.UriComponentsBuilder;

//페이지내이션에서 한 페이지당 글을 저장하고 다루기 위한 VO 클래스
public class PageMaker {
	private int totalCount;
	private int startPage;
	private int endPage;
	private boolean prev;
	private boolean next;
	private int displayPageNum = 10;
	private Criteria cri;
	public int getTotalCount() {
		return totalCount;
	}
	public void setTotalCount(int totalCount) {
		this.totalCount = totalCount;
	}
	public int getStartPage() {
		return startPage;
	}
	public void setStartPage(int startPage) {
		this.startPage = startPage;
	}
	public int getEndPage() {
		return endPage;
	}
	public void setEndPage(int endPage) {
		this.endPage = endPage;
	}
	public boolean isPrev() {
		return prev;
	}
	public void setPrev(boolean prev) {
		this.prev = prev;
	}
	public boolean isNext() {
		return next;
	}
	public void setNext(boolean next) {
		this.next = next;
	}
	public int getDisplayPageNum() {
		return displayPageNum;
	}
	public void setDisplayPageNum(int displayPageNum) {
		this.displayPageNum = displayPageNum;
	}
	public Criteria getCri() {
		return cri;
	}
	public void setCri(Criteria cri) {
		this.cri = cri;
	}
	@Override
	public String toString() {
		return "PageMaker [totalCount=" + totalCount + ", startPage=" + startPage + ", endPage=" + endPage + ", prev="
				+ prev + ", next=" + next + ", displayPageNum=" + displayPageNum + ", cri=" + cri + "]";
	}
	
	private void calcData() {	//시작페이지, 끝페이지, 전체페이지 수, 이전/다음페이지 존재 걔산
		endPage = (int) (Math.ceil(cri.getPage()/(double) displayPageNum) * displayPageNum startPage = (endPage - displayPageNum) +1;
		startPage = (endPage - displayPageNum) + 1;
	
	
	}
	public String makeQuery(int page) {	//입력된 검색어에 따른 계산된 페이지의 파라미터를 URI로 전달하는 메서드
		SearchCriteria sc = new SearchCriteria();
		UriComponents uriComponents = UriComponentsBuilder.newInstance()
				.queryParam("page", page)
				.queryParam("perPageNum", cri.getPerPage())
				.queryParam("searchType", sc.getSearchType())
				.queryParam("keyword", encoding(sc.getKeyword()))
				.build();
		return uriComponents.toUriString();
				
	}
	
	public String encoding(String keyword) {	//한글로 입력된 검색어를 
		if(keyword == null || keyword.trim().length() == 0) {
			return "";
		}
	}
}	
